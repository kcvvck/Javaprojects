#BlueJ class context
comment0.target=weatherParse
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment10.params=parser
comment10.target=double\ averageTemperatureInFile(org.apache.commons.csv.CSVParser)
comment11.params=
comment11.target=void\ testAverageTemperatureInFile()
comment12.params=parser\ value
comment12.target=double\ averageTemperatureWithHighHumidityInFile(org.apache.commons.csv.CSVParser,\ int)
comment13.params=
comment13.target=void\ testAverageTemperatureWithHighHumidityInFile()
comment2.params=currRow\ lowest\ cond
comment2.target=org.apache.commons.csv.CSVRecord\ getLowest(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord,\ java.lang.String)
comment3.params=dr\ lowest\ fileName\ cond
comment3.target=org.apache.commons.csv.CSVRecord\ getLowestofTwo(edu.duke.DirectoryResource,\ org.apache.commons.csv.CSVRecord,\ java.io.File,\ java.lang.String)
comment4.params=parser
comment4.target=org.apache.commons.csv.CSVRecord\ coldestHourInFile(org.apache.commons.csv.CSVParser)
comment5.params=
comment5.target=void\ testcoldestHourInFile()
comment6.params=
comment6.target=void\ fileWithColdestTemperature()
comment7.params=parser
comment7.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment8.params=
comment8.target=void\ testlowestHumidityInFile()
comment9.params=
comment9.target=void\ lowestHumidityInManyFiles()
numComments=14
